{"ast":null,"code":"var _jsxFileName = \"/Users/karthick.krishnan/apps/dynamo-task/src/components/Launches/Launches.js\";\nimport React, { Component } from 'react';\nimport { Typography } from 'antd';\nimport { PictureOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { getData } from '../../actions/api-list';\nimport { connect } from 'react-redux';\nimport TableView from '../TableView/TableView';\nimport GridView from '../GridView/GridView';\nimport './Launches.css';\nconst {\n  Text,\n  Link\n} = Typography;\n\nclass APIList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isListView: true\n    };\n    this.toggleViewMode = this.toggleViewMode.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  toggleViewMode(isListView) {\n    return () => {\n      this.setState({\n        isListView\n      });\n    };\n  }\n\n  render() {\n    const {\n      isListView\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Launches\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PictureOutlined, {\n      onClick: this.toggleViewMode(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(UnorderedListOutlined, {\n      onClick: this.toggleViewMode(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }))), isListView ? /*#__PURE__*/React.createElement(TableView, {\n      dataSource: this.props.apiList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 24\n      }\n    }) : /*#__PURE__*/React.createElement(GridView, {\n      dataSource: this.props.apiList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 72\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  apiList: state.publicAPI.apiList,\n  isLoading: state.publicAPI.isLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getData: searchString => dispatch(getData(searchString))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(APIList);","map":{"version":3,"sources":["/Users/karthick.krishnan/apps/dynamo-task/src/components/Launches/Launches.js"],"names":["React","Component","Typography","PictureOutlined","UnorderedListOutlined","getData","connect","TableView","GridView","Text","Link","APIList","constructor","props","state","isListView","toggleViewMode","bind","componentDidMount","setState","render","apiList","mapStateToProps","publicAPI","isLoading","mapDispatchToProps","dispatch","searchString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,eAAT,EAA0BC,qBAA1B,QAAuD,mBAAvD;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,gBAAP;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAiBR,UAAvB;;AAGA,MAAMS,OAAN,SAAsBV,SAAtB,CAAgC;AAE9BW,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAc;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAd;AAEA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,KAAL,CAAWR,OAAX;AACD;;AAEDW,EAAAA,cAAc,CAACD,UAAD,EAAa;AACzB,WAAO,MAAM;AACX,WAAKI,QAAL,CAAc;AAACJ,QAAAA;AAAD,OAAd;AACD,KAFD;AAGD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA;AAAF,QAAiB,KAAKD,KAA5B;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAE,KAAKE,cAAL,CAAoB,KAApB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,qBAAD;AAAuB,MAAA,OAAO,EAAE,KAAKA,cAAL,CAAoB,IAApB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF,EAQID,UAAU,gBAAG,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWQ,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAAmD,oBAAC,QAAD;AAAU,MAAA,UAAU,EAAE,KAAKR,KAAL,CAAWQ,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARjE,CADF;AAYD;;AAlC6B;;AAoChC,MAAMC,eAAe,GAAGR,KAAK,KAAK;AAChCO,EAAAA,OAAO,EAAEP,KAAK,CAACS,SAAN,CAAgBF,OADO;AAEhCG,EAAAA,SAAS,EAAEV,KAAK,CAACS,SAAN,CAAgBC;AAFK,CAAL,CAA7B;;AAKA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrB,EAAAA,OAAO,EAAGsB,YAAD,IAAkBD,QAAQ,CAACrB,OAAO,CAACsB,YAAD,CAAR;AADG,CAAL,CAAnC;;AAIA,eAAerB,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Typography } from 'antd';\nimport { PictureOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { getData } from '../../actions/api-list'\nimport { connect } from 'react-redux'\nimport TableView from '../TableView/TableView'\nimport GridView from '../GridView/GridView'\nimport './Launches.css'\nconst { Text, Link } = Typography;\n\n\nclass APIList extends Component {\n\n  constructor(props){\n    super(props);\n    this.state =  {isListView: true};\n\n    this.toggleViewMode = this.toggleViewMode.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  toggleViewMode(isListView) {\n    return () => {\n      this.setState({isListView})\n    }\n  }\n\n  render() {\n    const { isListView } = this.state;\n    \n    return (\n      <div>\n        <div className='toolbar'>\n          <Text className='header'>Launches</Text>\n          <div className='icons'>\n            <PictureOutlined onClick={this.toggleViewMode(false)} />\n            <UnorderedListOutlined onClick={this.toggleViewMode(true)} />\n          </div>\n        </div>\n        { isListView ? <TableView dataSource={this.props.apiList} /> : <GridView dataSource={this.props.apiList} /> }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  apiList: state.publicAPI.apiList,\n  isLoading: state.publicAPI.isLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getData: (searchString) => dispatch(getData(searchString))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(APIList);\n"]},"metadata":{},"sourceType":"module"}