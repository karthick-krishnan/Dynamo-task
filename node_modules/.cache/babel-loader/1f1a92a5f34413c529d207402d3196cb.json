{"ast":null,"code":"import firebase from 'firebase';\nimport { firebaseConfig } from '../config/index';\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const SIGNING_UP_START = 'SIGNING_UP_START';\nexport const SIGNING_UP_SUCCESS = 'SIGNING_UP_SUCCESS';\nexport const SIGNING_UP_FAILURE = 'SIGNING_UP_FAILURE';\nexport function checkLogin() {\n  return {\n    type: LOGIN_START\n  };\n}\nexport function fetchSuccess(payload) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload\n  };\n}\nexport function fetchFailure(error) {\n  return {\n    type: LOGIN_FAILURE,\n    payload: error\n  };\n}\nexport function signingUpStart() {\n  return {\n    type: SIGNING_UP_START\n  };\n}\nexport function SingingUpSuccess(status) {\n  return {\n    type: SIGNING_UP_SUCCESS,\n    payload: status\n  };\n}\nexport function SingingUpFailure(status) {\n  return {\n    type: SIGNING_UP_FAILURE,\n    payload: status\n  };\n}\nexport const LOGIN = () => {\n  return dispatch => {\n    dispatch(checkLogin());\n  };\n};\nexport const signUp = params => {\n  const {\n    email,\n    password\n  } = params;\n  return dispatch => {\n    dispatch(signingUpStart());\n    return firebaseApp.auth().createUserWithEmailAndPassword(email, password).then(() => dispatch(SingingUpSuccess({\n      code: 200,\n      msg: 'The email has registered successfully'\n    }))).catch(error => {\n      dispatch(SingingUpFailure({\n        code: 401,\n        msg: 'The email is already registered'\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/karthick.krishnan/apps/dynamo-task/src/actions/authenticate.js"],"names":["firebase","firebaseConfig","firebaseApp","initializeApp","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNING_UP_START","SIGNING_UP_SUCCESS","SIGNING_UP_FAILURE","checkLogin","type","fetchSuccess","payload","fetchFailure","error","signingUpStart","SingingUpSuccess","status","SingingUpFailure","LOGIN","dispatch","signUp","params","email","password","auth","createUserWithEmailAndPassword","then","code","msg","catch"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,cAAT,QAA8B,iBAA9B;AAEA,MAAMC,WAAW,GAAGF,QAAQ,CAACG,aAAT,CAAuBF,cAAvB,CAApB;AAEA,OAAO,MAAMG,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAGP,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD;AAED,OAAO,SAASQ,YAAT,CAAsBC,OAAtB,EAA+B;AACpC,SAAO;AACLF,IAAAA,IAAI,EAAEN,aADD;AAELQ,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAClC,SAAO;AACLJ,IAAAA,IAAI,EAAEL,aADD;AAELO,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID;AAED,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAO;AACLL,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD;AAED,OAAO,SAASU,gBAAT,CAA0BC,MAA1B,EAAkC;AACvC,SAAO;AACLP,IAAAA,IAAI,EAAEH,kBADD;AAELK,IAAAA,OAAO,EAAGK;AAFL,GAAP;AAID;AAED,OAAO,SAASC,gBAAT,CAA0BD,MAA1B,EAAkC;AACvC,SAAO;AACLP,IAAAA,IAAI,EAAEF,kBADD;AAELI,IAAAA,OAAO,EAAGK;AAFL,GAAP;AAID;AAED,OAAO,MAAME,KAAK,GAAG,MAAM;AACzB,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACX,UAAU,EAAX,CAAR;AAED,GAHD;AAID,CALM;AAOL,OAAO,MAAMY,MAAM,GAAIC,MAAD,IAAY;AAChC,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAqBF,MAA3B;AACA,SAAQF,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AACA,WAAOd,WAAW,CAACwB,IAAZ,GACNC,8BADM,CACyBH,KADzB,EACgCC,QADhC,EAENG,IAFM,CAED,MAAMP,QAAQ,CAACJ,gBAAgB,CAAC;AAACY,MAAAA,IAAI,EAAE,GAAP;AAAYC,MAAAA,GAAG,EAAE;AAAjB,KAAD,CAAjB,CAFb,EAGNC,KAHM,CAGChB,KAAD,IAAW;AAChBM,MAAAA,QAAQ,CAACF,gBAAgB,CAAE;AAACU,QAAAA,IAAI,EAAG,GAAR;AAAaC,QAAAA,GAAG,EAAG;AAAnB,OAAF,CAAjB,CAAR;AACD,KALM,CAAP;AAMD,GARD;AASD,CAXM","sourcesContent":["import firebase from 'firebase';\nimport { firebaseConfig} from '../config/index'\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const SIGNING_UP_START = 'SIGNING_UP_START';\nexport const SIGNING_UP_SUCCESS = 'SIGNING_UP_SUCCESS';\nexport const SIGNING_UP_FAILURE = 'SIGNING_UP_FAILURE';\n\n\nexport function checkLogin() {\n  return {\n    type: LOGIN_START,\n  };\n}\n\nexport function fetchSuccess(payload) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload\n  };\n}\n\nexport function fetchFailure(error) {\n  return {\n    type: LOGIN_FAILURE,\n    payload: error\n  };\n}\n\nexport function signingUpStart() {\n  return {\n    type: SIGNING_UP_START\n  };\n}\n\nexport function SingingUpSuccess(status) {\n  return {\n    type: SIGNING_UP_SUCCESS,\n    payload : status\n  };\n}\n\nexport function SingingUpFailure(status) {\n  return {\n    type: SIGNING_UP_FAILURE,\n    payload : status\n  };\n}\n\nexport const LOGIN = () => {\n  return (dispatch) => {\n    dispatch(checkLogin());\n\n  }\n}\n\n  export const signUp = (params) => {\n    const {email, password } = params;\n    return (dispatch) => {\n      dispatch(signingUpStart());\n      return firebaseApp.auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => dispatch(SingingUpSuccess({code: 200, msg: 'The email has registered successfully'})))\n      .catch((error) => {\n        dispatch(SingingUpFailure( {code : 401, msg : 'The email is already registered'}))\n      })\n    }\n  }\n  \n\n"]},"metadata":{},"sourceType":"module"}