{"ast":null,"code":"import { firebaseApp } from '../utils/firebase';\nimport { messages } from '../constants/messages';\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const SIGNING_UP_START = 'SIGNING_UP_START';\nexport const SIGNING_UP_SUCCESS = 'SIGNING_UP_SUCCESS';\nexport const SIGNING_UP_FAILURE = 'SIGNING_UP_FAILURE';\nexport function loginStart() {\n  return {\n    type: LOGIN_START\n  };\n}\nexport function loginSuccess(payload) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload\n  };\n}\nexport function loginFailure(error) {\n  return {\n    type: LOGIN_FAILURE,\n    payload: error\n  };\n}\nexport function signingUpStart() {\n  return {\n    type: SIGNING_UP_START\n  };\n}\nexport function signingUpSuccess(status) {\n  return {\n    type: SIGNING_UP_SUCCESS,\n    payload: status\n  };\n}\nexport function signingUpFailure(status) {\n  return {\n    type: SIGNING_UP_FAILURE,\n    payload: status\n  };\n}\nexport const login = user => {\n  return dispatch => {\n    dispatch(loginStart());\n    firebaseApp.auth().signInWithEmailAndPassword(user.email, user.password).then(data => {\n      dispatch(loginSuccess({\n        code: 200,\n        token: data.user.getIdToken()\n      }));\n    }).catch(error => {\n      console.log('error', error);\n      dispatch(loginFailure({\n        code: 401,\n        msg: messages.authentication.LOGIN_FAILURE\n      }));\n    });\n  };\n};\nexport const signUp = params => {\n  const {\n    email,\n    password\n  } = params;\n  return dispatch => {\n    dispatch(signingUpStart());\n    firebaseApp.auth().createUserWithEmailAndPassword(email, password).then(() => dispatch(signingUpSuccess({\n      code: 200,\n      msg: messages.authentication.SIGNUP_SUCCESS\n    }))).catch(error => {\n      dispatch(signingUpFailure({\n        code: 401,\n        msg: messages.authentication.SIGNUP_FAILURE\n      }));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/karthick.krishnan/apps/dynamo-task_1/src/actions/authentication.js"],"names":["firebaseApp","messages","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","SIGNING_UP_START","SIGNING_UP_SUCCESS","SIGNING_UP_FAILURE","loginStart","type","loginSuccess","payload","loginFailure","error","signingUpStart","signingUpSuccess","status","signingUpFailure","login","user","dispatch","auth","signInWithEmailAndPassword","email","password","then","data","code","token","getIdToken","catch","console","log","msg","authentication","signUp","params","createUserWithEmailAndPassword","SIGNUP_SUCCESS","SIGNUP_FAILURE"],"mappings":"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","sourcesContent":["\nimport { firebaseApp }  from '../utils/firebase';\nimport { messages } from '../constants/messages'\n\nexport const LOGIN_START = 'LOGIN_START';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const SIGNING_UP_START = 'SIGNING_UP_START';\nexport const SIGNING_UP_SUCCESS = 'SIGNING_UP_SUCCESS';\nexport const SIGNING_UP_FAILURE = 'SIGNING_UP_FAILURE';\n\n\nexport function loginStart() {\n  return {\n    type: LOGIN_START,\n  };\n}\n\nexport function loginSuccess(payload) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload\n  };\n}\n\nexport function loginFailure(error) {\n  return {\n    type: LOGIN_FAILURE,\n    payload: error\n  };\n}\n\nexport function signingUpStart() {\n  return {\n    type: SIGNING_UP_START\n  };\n}\n\nexport function signingUpSuccess(status) {\n  return {\n    type: SIGNING_UP_SUCCESS,\n    payload : status\n  };\n}\n\nexport function signingUpFailure(status) {\n  return {\n    type: SIGNING_UP_FAILURE,\n    payload : status\n  };\n}\n\nexport const login = (user) => {\n  return (dispatch) => {\n    dispatch(loginStart());\n    firebaseApp.auth()\n    .signInWithEmailAndPassword(user.email, user.password)\n    .then((data) => {\n      dispatch(loginSuccess({code: 200, token: data.user.getIdToken()}));\n    })\n    .catch((error) => {\n      console.log('error', error);\n      dispatch(loginFailure({code: 401, msg: messages.authentication.LOGIN_FAILURE}))\n    })\n  }\n}\n\n  export const signUp = (params) => {\n    const {email, password } = params;\n    return (dispatch) => {\n      dispatch(signingUpStart());\n      firebaseApp.auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => dispatch(signingUpSuccess({code: 200, msg: messages.authentication.SIGNUP_SUCCESS})))\n      .catch((error) => {\n        dispatch(signingUpFailure({code: 401, msg: messages.authentication.SIGNUP_FAILURE}))\n      })\n    }\n  }\n\n  \n  \n  \n\n"]},"metadata":{},"sourceType":"module"}