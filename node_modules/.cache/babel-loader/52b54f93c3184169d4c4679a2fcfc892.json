{"ast":null,"code":"var _jsxFileName = \"/Users/karthick.krishnan/apps/dynamo-task_1/src/components/Authentication/Register.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../actions/authentication';\nimport { formItemLayout, tailFormItemLayout } from './ant-d-props';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: false\n    };\n  }\n\n  render() {\n    const onFinish = values => {\n      this.props.signUp(values);\n    };\n\n    const Msgcomp = this.props.signingUpStatus ? this.props.signingUpStatus.code == 200 ? /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"success-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 95\n      }\n    }, this.props.signingUpStatus.msg, \" \") : /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"error-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 54\n      }\n    }, this.props.signingUpStatus.msg) : null;\n    return /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n      name: \"register\",\n      onFinish: onFinish,\n      className: \"form\",\n      scrollToFirstError: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, Msgcomp), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || value.length > 5) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('Please enter atleast 6 characters!'));\n        }\n\n      })],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('The two passwords that you entered do not match!'));\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, \"Login\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    signingUpStatus: state.authentication.status,\n    isLoading: state.authentication.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: data => dispatch(signUp(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/karthick.krishnan/apps/dynamo-task_1/src/components/Authentication/Register.js"],"names":["React","Component","Form","Input","Select","Row","Col","Checkbox","Button","AutoComplete","Link","connect","signUp","formItemLayout","tailFormItemLayout","Register","constructor","props","state","isToggleOn","render","onFinish","values","Msgcomp","signingUpStatus","code","msg","type","message","required","getFieldValue","validator","_","value","length","Promise","resolve","reject","Error","mapStateToProps","authentication","status","isLoading","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signUp } from '../../actions/authentication';\nimport {formItemLayout, tailFormItemLayout } from './ant-d-props'\n\n\n\n\nclass Register extends Component {\n\n    constructor(props){\n        super(props);\n        this.state =  {isToggleOn: false};\n      }\n\n      render(){\n        const onFinish = (values) => {\n          this.props.signUp(values);\n        };\n        const Msgcomp = this.props.signingUpStatus ? this.props.signingUpStatus.code == 200 ? <h3 className=\"success-header\">\n          { this.props.signingUpStatus.msg } </h3> : <h3 className=\"error-header\">{ this.props.signingUpStatus.msg  }</h3>: null;\n        return(\n            <Form\n            {...formItemLayout}\n            name=\"register\"\n            onFinish={onFinish}\n            className=\"form\"\n            scrollToFirstError\n          >\n             <h1 className=\"header\">Register</h1>\n            <div>{Msgcomp}</div>\n            <Form.Item\n              name=\"email\"\n              label=\"E-mail\"\n              rules={[\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n      \n            <Form.Item\n              name=\"password\"\n              label=\"Password\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if(!value || value.length > 5){\n                      return Promise.resolve();\n                    }      \n                    return Promise.reject(new Error('Please enter atleast 6 characters!'));\n                  },\n                }),\n                \n              ]}\n              hasFeedback\n            >\n              <Input.Password />\n            </Form.Item>\n      \n            <Form.Item\n              name=\"confirm\"\n              label=\"Confirm Password\"\n              dependencies={['password']}\n              hasFeedback\n              rules={[\n                {\n                  required: true,\n                  message: 'Please confirm your password!',\n                },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n      \n                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\" className=\"button\">\n                Register\n              </Button>\n              <Link to=\"/\">\n              <Button type=\"primary\" className=\"button\">\n                Login\n              </Button>\n              </Link>\n            </Form.Item>\n          </Form>\n          )\n      }\n    }\n\n    const mapStateToProps = (state) => {\n      return {\n        signingUpStatus: state.authentication.status,\n        isLoading: state.authentication.isLoading\n      }\n \n    };\nconst mapDispatchToProps = dispatch => ({\n  signUp: (data) => dispatch(signUp(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}