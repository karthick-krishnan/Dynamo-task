{"ast":null,"code":"var _jsxFileName = \"/Users/karthick.krishnan/apps/dynamo-task/src/components/authenticate/register.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../actions/authenticate';\nimport { formItemLayout, tailFormItemLayout } from './ant-d-props';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: false\n    };\n  }\n\n  render() {\n    const onFinish = values => {\n      console.log('Received values of form: ', values);\n      this.props.signUp(values);\n    };\n\n    const MsgComp = this.props.signingUpStatus ? this.props.signingUpStatus.code == 200 ? /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"success-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 89\n      }\n    }, this.props.signingUpStatus.msg, \" \") : /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"error-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 49\n      }\n    }, this.props.signingUpStatus.msg) : null;\n    return /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n      name: \"register\",\n      onFinish: onFinish,\n      className: \"form\",\n      scrollToFirstError: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, MsgComp), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('The two passwords that you entered do not match!'));\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Register\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    signingUpStatus: state.authenticate.status,\n    isLoading: state.authenticate.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUp: data => dispatch(signUp(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/karthick.krishnan/apps/dynamo-task/src/components/authenticate/register.js"],"names":["React","Component","Form","Input","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","connect","signUp","formItemLayout","tailFormItemLayout","Register","constructor","props","state","isToggleOn","render","onFinish","values","console","log","MsgComp","signingUpStatus","code","msg","type","message","required","getFieldValue","validator","_","value","Promise","resolve","reject","Error","mapStateToProps","authenticate","status","isLoading","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport { connect } from 'react-redux'\nimport { signUp } from '../../actions/authenticate';\nimport {formItemLayout, tailFormItemLayout } from './ant-d-props'\n\n\n\nclass Register extends Component {\n\n    constructor(props){\n        super(props);\n        this.state =  {isToggleOn: false};\n      }\n\n      render(){\n  const onFinish = (values) => {\n    console.log('Received values of form: ', values);\n    this.props.signUp(values);\n  };\n  const MsgComp = this.props.signingUpStatus ? this.props.signingUpStatus.code == 200 ? <h3 className=\"success-header\">\n     { this.props.signingUpStatus.msg } </h3> : <h3 className=\"error-header\">{ this.props.signingUpStatus.msg  }</h3>: null;\n        return(\n            <Form\n            {...formItemLayout}\n            name=\"register\"\n            onFinish={onFinish}\n            className=\"form\"\n            scrollToFirstError\n          >\n            <div>{MsgComp}</div>\n            <Form.Item\n              name=\"email\"\n              label=\"E-mail\"\n              rules={[\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n      \n            <Form.Item\n              name=\"password\"\n              label=\"Password\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n              ]}\n              hasFeedback\n            >\n              <Input.Password />\n            </Form.Item>\n      \n            <Form.Item\n              name=\"confirm\"\n              label=\"Confirm Password\"\n              dependencies={['password']}\n              hasFeedback\n              rules={[\n                {\n                  required: true,\n                  message: 'Please confirm your password!',\n                },\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    if (!value || getFieldValue('password') === value) {\n                      return Promise.resolve();\n                    }\n      \n                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                  },\n                }),\n              ]}\n            >\n              <Input.Password />\n            </Form.Item>\n            <Form.Item {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Register\n              </Button>\n            </Form.Item>\n\n          </Form>\n          \n          )\n\n      }\n    }\n\n    const mapStateToProps = (state) => {\n      return {\n        signingUpStatus: state.authenticate.status,\n        isLoading: state.authenticate.isLoading\n      }\n \n    };\nconst mapDispatchToProps = dispatch => ({\n  signUp: (data) => dispatch(signUp(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}