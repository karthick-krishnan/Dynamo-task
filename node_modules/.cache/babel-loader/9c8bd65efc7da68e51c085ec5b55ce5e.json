{"ast":null,"code":"var _jsxFileName = \"/Users/karthick.krishnan/apps/dynamo-task/src/components/TableView/TableView.js\";\nimport React from 'react';\nimport { Table, Tag, Space, Typography } from 'antd';\nimport { useHistory } from \"react-router\";\nconst {\n  Text,\n  Link\n} = Typography;\nexport default (props => {\n  const history = useHistory();\n\n  const openRecord = flight_number => {\n    history.push('/launch/' + flight_number);\n  };\n\n  const columns = [{\n    title: 'Mission Name',\n    dataIndex: 'mission_name',\n    key: 'mission_name',\n    render: (text, record) => /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => openRecord(record.flight_number),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 35\n      }\n    }, text)\n  }, {\n    title: 'Date',\n    dataIndex: 'launch_date_utc',\n    key: 'launch_date_utc',\n    render: date => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, new Date(date).toLocaleDateString()))\n  }, {\n    title: 'State',\n    dataIndex: 'launch_success',\n    key: 'launch_success',\n    render: state => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tag, {\n      color: state ? 'green' : 'red',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, state ? 'SUCCESS' : 'FAILURE'))\n  }];\n  return /*#__PURE__*/React.createElement(Table, {\n    dataSource: props.dataSource,\n    columns: columns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  });\n});","map":{"version":3,"sources":["/Users/karthick.krishnan/apps/dynamo-task/src/components/TableView/TableView.js"],"names":["React","Table","Tag","Space","Typography","useHistory","Text","Link","props","history","openRecord","flight_number","push","columns","title","dataIndex","key","render","text","record","date","Date","toLocaleDateString","state","dataSource"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,EAA4BC,UAA5B,QAA8C,MAA9C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,MAAM;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAiBH,UAAvB;AAEA,gBAAeI,KAAK,IAAI;AACpB,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AAEA,QAAMK,UAAU,GAAGC,aAAa,IAAI;AAChCF,IAAAA,OAAO,CAACG,IAAR,CAAa,aAAWD,aAAxB;AACH,GAFD;;AAIA,QAAME,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,cADT;AAEEC,IAAAA,SAAS,EAAE,cAFb;AAGEC,IAAAA,GAAG,EAAE,cAHP;AAIEC,IAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,MAAP,kBAAkB;AAAG,MAAA,OAAO,EAAE,MAAMT,UAAU,CAACS,MAAM,CAACR,aAAR,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDO,IAArD;AAJ5B,GADc,EAOd;AACEJ,IAAAA,KAAK,EAAE,MADT;AAEEC,IAAAA,SAAS,EAAE,iBAFb;AAGEC,IAAAA,GAAG,EAAE,iBAHP;AAIEC,IAAAA,MAAM,EAAEG,IAAI,iBACR,uDACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,IAAIC,IAAJ,CAASD,IAAT,EAAeE,kBAAf,EAAP,CADJ;AALN,GAPc,EAiBd;AACER,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,SAAS,EAAE,gBAFb;AAGEC,IAAAA,GAAG,EAAE,gBAHP;AAIEC,IAAAA,MAAM,EAAEM,KAAK,iBACX,uDACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAEA,KAAK,GAAG,OAAH,GAAY,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,KAAK,GAAG,SAAH,GAAe,SADzB,CADF;AALJ,GAjBc,CAAhB;AA+BA,sBACI,oBAAC,KAAD;AAAO,IAAA,UAAU,EAAEf,KAAK,CAACgB,UAAzB;AAAqC,IAAA,OAAO,EAAEX,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAzCD","sourcesContent":["import React from 'react';\nimport { Table, Tag, Space, Typography } from 'antd';\nimport { useHistory } from \"react-router\";\nconst { Text, Link } = Typography;\n\nexport default props => {\n    const history = useHistory();\n\n    const openRecord = flight_number => {\n        history.push('/launch/'+flight_number);\n    }\n    \n    const columns = [\n      {\n        title: 'Mission Name',\n        dataIndex: 'mission_name',\n        key: 'mission_name',\n        render: (text, record) => <a onClick={() => openRecord(record.flight_number)}>{text}</a>,\n      },\n      {\n        title: 'Date',\n        dataIndex: 'launch_date_utc',\n        key: 'launch_date_utc',\n        render: date => (\n            <>\n                <Text>{new Date(date).toLocaleDateString()}</Text> \n            </>\n          ),\n      },\n      {\n        title: 'State',\n        dataIndex: 'launch_success',\n        key: 'launch_success',\n        render: state => (\n          <>\n            <Tag color={state ? 'green': 'red'}>\n                {state ? 'SUCCESS' : 'FAILURE'}\n            </Tag>\n          </>\n        ),\n      }\n    ];\n\n    return (\n        <Table dataSource={props.dataSource} columns={columns} />  \n    );\n}"]},"metadata":{},"sourceType":"module"}